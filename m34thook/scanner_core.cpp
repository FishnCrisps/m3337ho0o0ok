#include "game_exe_interface.hpp"
#include "memscan.hpp"
#include "scanner_core.hpp"

//#define		PRINT_SCAN_TIME_TAKEN
using locate_alloca_probe = memscanner_t<
	scanbytes<0x48, 0x83, 0xec, 0x10, 0x4c, 0x89, 0x14, 0x24, 0x4c, 0x89, 0x5c, 0x24, 0x8, 0x4d, 0x33, 0xdb, 0x4c, 0x8d, 0x54, 0x24, 0x18, 0x4c, 0x2b, 0xd0, 0x4d, 0xf, 0x42, 0xd3, 0x65, 0x4c, 0x8b, 0x1c, 0x25, 0x10, 0x0, 0x0, 0x0, 0x4d, 0x3b, 0xd3, 0xf2, 0x73, 0x17, 0x66, 0x41, 0x81, 0xe2, 0x0, 0xf0, 0x4d, 0x8d, 0x9b, 0x0, 0xf0, 0xff, 0xff, 0x41, 0xc6, 0x3, 0x0, 0x4d, 0x3b, 0xd3, 0xf2, 0x75, 0xef, 0x4c, 0x8b, 0x14, 0x24, 0x4c, 0x8b, 0x5c, 0x24, 0x8, 0x48, 0x83, 0xc4, 0x10, 0xf2, 0xc3>>;
located_feature_t descan::g_alloca_probe = 0;
located_feature_t descan::g_security_cookie = 0;
located_feature_t descan::g_security_check_cookie = 0;
located_feature_t descan::g_msvc_typeinfo_vtbl = 0;
located_feature_t descan::g_doom_memorysystem = 0;
located_feature_t descan::g_idfilecompressed_getfile = 0;
located_feature_t descan::g_doom_operator_new = 0;
located_feature_t descan::g_idoodle_decompress = 0;
located_feature_t descan::g_sqrtf = 0;
located_feature_t descan::g_sqrt = 0;

located_feature_t descan::g_idfilememory_ctor = 0;
located_feature_t descan::g_gamelib_initialize_ptr = 0;
located_feature_t descan::g__ZN5idStr4IcmpEPKcS1_ = 0;
located_feature_t descan::g_idcmdsystem = 0, descan::g_idcvarsystem = 0, descan::g_idlib_vprintf = 0;

//idStr::Hash is inlined everywhere in v6
#if !defined(MH_ETERNAL_V6)
located_feature_t descan::g_idstr_hash = 0;
#endif
located_feature_t descan::g_gamelocal = 0, descan::g_command_patch_area = 0;

located_feature_t descan::g_idstr__idstr = 0;
located_feature_t descan::g_atomic_string_set = 0;
located_feature_t descan::g_declentitydef_setentitystate = 0;
located_feature_t descan::g_declentitydef_gettextwithinheritance = 0;
located_feature_t descan::g_idlib_warning = 0, descan::g_idstr_dctor = 0, descan::g_idstr_assign_charptr = 0, descan::g_noclip_func = 0, descan::g_idmapfile_write = 0;

located_feature_t descan::g_idgamesystemlocal = 0;
located_feature_t descan::g_idgamesystemlocal_find = 0;

located_feature_t descan::g_maplocal_getlevelmap = 0;

located_feature_t descan::g_idfilesystemlocal = 0;

located_feature_t descan::g_idlib_fatalerror = 0, descan::g_idlib_error = 0;
located_feature_t descan::g_levelreload = 0;
located_feature_t descan::g_init_func_rva_992170 = 0;
//v1 = 0140B70320 find_next_entity_with_class 
located_feature_t descan::g_find_next_entity_with_class = 0;

located_feature_t descan::g_resourcelist_index = 0;



unsigned descan::g_vftbl_offset_getlevelmap = 0;
unsigned descan::g_offset_resourcelist_length = 0;

#include "define_vtbl_feature_vars.hpp"

static void* g_security_cookie_rvaptr = nullptr;
#include "scanners/scanners_typeinfo.hpp"

//v1=1408DAB34
//use locate_func + hunt start back
using locate_resourcelist_index = memscanner_t<
	scanbytes<0x84,0xc0,0x8b,0xfb,0xb9,0x1,0x0,0x0,0x0,0xf,0x45,0xf9,
	
	//lea - offset differs from v6 to v1
	0x41,0x3B,0x6E
	>,
	//skip<1>,
	skip_and_capture_1byte_value<&descan::g_offset_resourcelist_length>,
	scanbytes<0x7C>, //jl, skip offset even though same in all
	skip<1>,
// lea     rcx, aResourceIndexE
	scanbytes<0x48,0x8D,0x0D>,
	riprel32_data_equals<  0x52, 0x65, 0x73, 0x6F, 0x75, 0x72, 0x63, 0x65, 0x20, 0x69, 
  0x6E, 0x64, 0x65, 0x78, 0x20, 0x65, 0x78, 0x63, 0x65, 0x65, 
  0x64, 0x73, 0x20, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6E, 0x74, 
  0x20, 0x63, 0x6F, 0x75, 0x6E, 0x74, 0x00>>;//Resource index exceeds current count



using locate_security_check_cookie = memscanner_t<scanbytes<0x48, 0x3b, 0xd>,
	skip_and_capture_rva<&descan::g_security_cookie>,
	scanbytes<0xf2, 0x75, 0x12, 0x48, 0xc1, 0xc1, 0x10, 0x66, 0xf7, 0xc1, 0xff, 0xff, 0xf2, 0x75, 0x2, 0xf2, 0xc3, 0x48, 0xc1, 0xc9, 0x10, 0xe9>>;


using locate_typeinfo_vtbl = scanbytes<0x18, 0x21, 0xef, 0x42, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2e, 0x3f, 0x41, 0x56, 0x3f, 0x24, 0x69, 0x64, 0x53, 0x74, 0x72, 0x44, 0x79, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x40, 0x24, 0x30, 0x43, 0x41, 0x41, 0x40, 0x40, 0x40, 0x0>;
#if !defined(MH_ETERNAL_V6)
using locate_idgamesystemlocal = memscanner_t<
	scanbytes<0x0F, 0x57, 0xC0, // xorps   xmm0, xmm0
	0xC6, 0x45>, // mov     byte ptr [rbp-64], 0
	skip<1>,
	scanbytes<0x00, 0x48, 0x8D, 0x0D>,
	skip_and_capture_rva<&descan::g_idgamesystemlocal>,
	scanbytes<0xF3, 0x0F, 0x7F>,
	skip<2>, //movdqu  xmmword ptr [rbp-80], xmm0
	scanbytes<0xe8>,
	skip<4>,
	scanbytes<0x48, 0x8B, 0xC8, //mov     rcx, rax
	0x4C, 0x8D, 0x0D>,
	riprel32_data_equals<  0x2F, 0x4D, 0x61, 0x74, 0x63, 0x68, 0x2F, 0x47, 0x65, 0x74,
	0x4D, 0x61, 0x74, 0x63, 0x68, 0x6D, 0x61, 0x6B, 0x69, 0x6E,
	0x67, 0x54, 0x69, 0x63, 0x6B, 0x65, 0x74, 0x00>
>;
#else
//v1=014096469B
using locate_idgamesystemlocal = memscanner_t<
	scanbytes<0x48, 0x8d, 0x15>,
	riprel32_data_equals<  0x2D, 0x72, 0x65, 0x73, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 
  0x00>, //-resetData
	scanbytes<0xE8>, //call to idStr::icmp
	skip<4>,
	scanbytes<0x85,0xc0,0x75>,
	skip<1>,
	scanbytes<0x48, 0x8D, 0x0D>//lea of idgamesyslocal
>;
#endif
using locate_memorysystem = memscanner_t<scanbytes<0x56, 0x57, 0x41, 0x54, 0x41, 0x56, 0x41, 0x57, 0x48, 0x8d, 0xac, 0x24, 0xb8, 0xbe, 0xff, 0xff, 0xb8, 0x48, 0x42, 0x0, 0x0, 0xe8>,
	match_riprel32_to<&descan::g_alloca_probe>,
	scanbytes<0x48, 0x2B, 0xE0, 0x48, 0x8B, 0x05>,
	match_riprel32_to<&descan::g_security_cookie>,
	scanbytes<0x48, 0x33, 0xc4, 0x48, 0x89, 0x85, 0x30, 0x41, 0x0, 0x0, 0x48, 0x8b, 0xf9, 0x49, 0x63, 0xf0, 0x48, 0x8B, 0x0D>>;

#if 0
using locate_idfilecompressed_getfile = memscanner_t<
	scanbytes<0x48, 0x8b, 0xc8, 0x48, 0x8b, 0xd8, 0x48, 0x8b, 0x10, 0xff, 0x52, 0x68, 0x48, 0x8B, 0xD>,
	match_riprel32_to<&descan::g_doom_memorysystem>,
	scanbytes<0x45, 0x33, 0xc9,
	0xc7, 0x44, 0x24, 0x28, 0x2, 0x0, 0x0, 0x0, 0x48, 0x8b, 0xf0, 0xc7, 0x44, 0x24, 0x20, 0x10, 0x0, 0x0, 0x0, 0x4c, 0x8d, 0x70, 0x1, 0x4c, 0x8b, 0x11, 0x45>>;
//	0x8d, 0x41, 0xd, 0x49, 0x8b, 0xd6, 0x41, 0xff, 0x52, 0x20, 0x4c, 0x8b, 0xb, 0x4c, 0x8b, 0xc6, 0x48, 0x8b, 0xd0, 0x48, 0x8b, 0xcb, 0x48, 0x8b, 0xf8, 0x41, 0xff, 0x51, 0x30, 0x44, 0x88, 0x2c, 0x37, 0x49, 0x8b, 0xd4>>;
#else
#if !defined(MH_ETERNAL_V6)
using locate_idfilecompressed_getfile = memscanner_t<
	scanbytes<0x48, 0x8B, 0x53, 0x08, 0x48, 0x8D, 0x0D>,
	riprel32_data_equals<  0x69, 0x64, 0x46, 0x69, 0x6C, 0x65, 0x52, 0x65, 0x73, 0x6F,
	0x75, 0x72, 0x63, 0x65, 0x43, 0x6F, 0x6D, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x64, 0x3A, 0x3A, 0x47, 0x65, 0x74, 0x46,
	0x69, 0x6C, 0x65, 0x3A, 0x20, 0x43, 0x6F, 0x75, 0x6C, 0x64,
	0x20, 0x6E, 0x6F, 0x74, 0x20, 0x64, 0x65, 0x63, 0x6F, 0x6D,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x74, 0x65, 0x78, 0x74,
	0x20, 0x66, 0x6F, 0x72, 0x20, 0x25, 0x73, 0x00>>;
#else
using locate_idfilecompressed_getfile = memscanner_t<
	scanbytes<0x48,0x8D,0x0D>,
	riprel32_data_equals<  0x69, 0x64, 0x46, 0x69, 0x6C, 0x65, 0x52, 0x65, 0x73, 0x6F, 
  0x75, 0x72, 0x63, 0x65, 0x43, 0x6F, 0x6D, 0x70, 0x72, 0x65, 
  0x73, 0x73, 0x65, 0x64, 0x3A, 0x3A, 0x47, 0x65, 0x74, 0x46, 
  0x69, 0x6C, 0x65, 0x3A, 0x20, 0x43, 0x6F, 0x75, 0x6C, 0x64, 
  0x20, 0x6E, 0x6F, 0x74, 0x20, 0x64, 0x65, 0x63, 0x6F, 0x6D, 
  0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x74, 0x65, 0x78, 0x74, 
  0x20, 0x66, 0x6F, 0x72, 0x20, 0x25, 0x73, 0x00>>;
#endif
#endif

using locate_doom_operator_new = memscanner_t<
	scanbytes<0x48, 0x89, 0x5c, 0x24, 0x10, 0x48, 0x89, 0x74, 0x24, 0x18, 0x57, 0x48, 0x83, 0xec, 0x30, 0x48, 0x8b, 0x71, 0x70, 0x48, 0x8b, 0xd9, 0xb9, 0x80, 0x1, 0x0, 0x0, 0xba>, skip<1>,/*0x9a,*/scanbytes<0x0, 0x0, 0x0, 0xe8>,
	skip_and_capture_rva<&descan::g_doom_operator_new>,
	scanbytes<0x48, 0x85, 0xc0, 0x74, 0x11, 0x48, 0x8b, 0x53, 0x8, 0x48, 0x8b, 0xc8, 0xe8>
>;
#if !defined(MH_ETERNAL_V6)
using locate_idoodle_decompress = memscanner_t<
	scanbytes<0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x6c, 0x24, 0x10, 0x48, 0x89, 0x74, 0x24, 0x18, 0x48, 0x89, 0x7c, 0x24, 0x20, 0x41, 0x56, 0x48, 0x81, 0xec, 0x90, 0x0, 0x0, 0x0, 0x48, 0x8b, 0xfa, 0x48, 0x8b, 0xf1, 0x8b, 0x8c, 0x24, 0xc0, 0x0, 0x0, 0x0, 0x48, 0x83, 0xca, 0xff, 0x49, 0x8b, 0xe9, 0x49, 0x8b, 0xd8>
>;
#else
//v1 = 14032D6A0 
//matches in v1 and v6
//mov rax, -1 became or rax, -1 which broke it, checked this and it matches all
using locate_idoodle_decompress = memscanner_t<
scanbytes<0x48,0x89,0x5c,0x24,0x8,0x48,0x89,0x6c,0x24,0x10,0x48,0x89,0x74,0x24,0x18,0x48,0x89,0x7c,0x24,0x20,0x41,0x56,0x48,0x81,0xec,0x90,0x0,0x0,0x0,0x48,0x8b,0xfa,0x48,0x8b,0xf1,0x8b,0x8c,0x24,0xc0,0x0,0x0,0x0>
>;
#endif


using locate_idlib_vprintf = memscanner_t<
	scanbytes<0x84, 0xc9, 0x74, 0x2c, 0x48, 0x89, 0x54, 0x24, 0x10, 0x4c, 0x89, 0x44, 0x24, 0x18, 0x4c, 0x89, 0x4c, 0x24, 0x20, 0x48, 0x83, 0xec, 0x28, 0x4c, 0x8b, 0xc2, 0x4c, 0x8d, 0x4c, 0x24, 0x40, 0xba, 0x5, 0x0, 0x0, 0x0, 0x8d, 0x4a, 0xfc, 0xe8>>;


using locate_idstr_hash = memscanner_t<

	scanbytes<0xf, 0xb6, 0x11, 0x33, 0xc0, 0x84, 0xd2, 0x74 /* short jmp */>,
	align_next<16>,
	scanbytes<0x6b, 0xc0, 0x1f, 0x48, 0x8d, 0x49, 0x1, 0xf, 0xb6, 0xd2, 0x3, 0xc2, 0xf, 0xb6, 0x11, 0x84, 0xd2, 0x75 /* short jmp */>,
	skip<1>,
	scanbytes<0xC3>>;
#if !defined(MH_ETERNAL_V6)
using locate_game_engine_init_ptr = memscanner_t<
	scanbytes<
	0xbf, 0xe, 0x1c, 0x40, 
	0xbf, 0xe, 0x1c, 0x40, 
	0xbf, 0xe, 0x9c, 0x40, 


	0xbf, 0xe, 0x1c, 0x3e, 0x1e, 0x16, 0x6a, 0x41, 0xf, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0>>;
#else
//v1 = 14335B078
using locate_game_engine_init_ptr = memscanner_t<
	scanbytes<
	0xbf, 0xe, 0x1c, 0x40, 
	0xbf, 0xe, 0x1c, 0x40, 
	0xbf, 0xe, 0x9c, 0x40>,
	match_within_variable_distance<12, memscanner_t<scanbytes<0xf, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0>>>


	>;
#endif
/*
	version 1.0
	1403817E0
*/
using p1_memorysystem_locator = memscanner_t<
	scanbytes<0x48, 0x8b, 0x13, 0x4f, 0x8d, 0x24, 0x37, 0x49, 0x8b, 0x4e, 0xf0, 0x49, 0x3, 0xd4, 0x48, 0x8b, 0x2, 0x49, 0x89, 0x46, 0xf0, 0x48, 0x89, 0xa, 0x48, 0x8b, 0x42, 0x8, 0x49, 0x8b, 0x4e, 0xf8, 0x49, 0x89, 0x46, 0xf8,
	0x48, 0x89, 0x4a, 0x8, 0xf, 0xb6, 0x42, 0x10, 0x41, 0xf, 0xb6, 0xe, 0x41, 0x88, 0x6, 0x88, 0x4a, 0x10, 0x48, 0x8b, 0x33, 0x49, 0x3, 0xf4, 0x48, 0x8b, 0x16, 0x48, 0x85, 0xd2, 0x74/*short jmp*/>,
	skip<1>,
	scanbytes<0x40, 0x38, 0x7e, 0x10, 0x74>,
	skip<1>,
	scanbytes<0x48, 0x8B, 0x0D>>;

using locate_idstr_ctor_void = memscanner_t<
	scanbytes<0x48, 0x8D>,
	skip<5>,
	scanbytes<0xc7, 0x41, 0x14, 0x14, 0x0, 0x0, 0x80, 0x48, 0x89, 0x1, 0x48, 0x8d, 0x41, 0x18, 0x48, 0x89, 0x41, 0x8, 0xc7, 0x41, 0x10, 0x0, 0x0, 0x0, 0x0, 0xc6, 0x0, 0x0, 0x48, 0x8b, 0xc1, 0xc3>
>;
using locate_sqrt = memscanner_t<scanbytes<0xf2, 0xf, 0x11, 0x44, 0x24, 0x8, 0x48, 0x83, 0xec, 0x58, 0x48, 0xb9, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x7f, 0xf2, 0xf, 0x11, 0x44, 0x24, 0x68, 0x48, 0x8b, 0x54, 0x24, 0x68, 0x48, 0x8b, 0xc2, 0x48, 0x23, 0xc1, 0x48, 0x3b, 0xc1>>;

//0x1418A847B 
using locate_idgamelocal = memscanner_t<
	scanbytes<0xf, 0x29, 0xb4, 0x24, 0x80, 0x0, 0x0, 0x0>,
	scanbytes<0x48, 0x81, 0xC1>,
	skip<4>,
	scanbytes<0xf, 0x29, 0x7c, 0x24, 0x70, 0x44, 0xf, 0x29, 0x44, 0x24, 0x60>,
	scanbytes<0xE8>,
	skip<4>,
	scanbytes<0xf3, 0xf, 0x10, 0x75, 0x8, 0x48, 0x8b, 0xce, 0xf3, 0xf, 0x10, 0x7d, 0x4, 0x8b, 0xd8, 0xf3, 0x44, 0xf, 0x10, 0x45, 0x0, 0x48, 0x8b, 0x16, 0xf, 0x5a, 0xf6, 0xf, 0x5a, 0xff, 0x45, 0xf, 0x5a, 0xc0, 0xff, 0x52, 0x60, 0xf2, 0xf, 0x11, 0x74, 0x24, 0x30>
>;

/*
	patch the returned address to be 0
*/
using locate_cmd_patch_area = memscanner_t<
	scanbytes<0x48, 0x89, 0x5c, 0x24, 0x18, 0x48, 0x89, 0x74, 0x24, 0x20, 0x55, 0x57, 0x41, 0x56, 0x48, 0x8d, 0x6c, 0x24, 0xb9, 0x48, 0x81, 0xec, 0x90, 0x0, 0x0, 0x0, 0x48, 0x8B, 5>,
	match_riprel32_to<&descan::g_security_cookie>,
	scanbytes<0x48, 0x33, 0xc4, 0x48, 0x89, 0x45, 0x37, 0x48, 0x8b, 0x35>,
	match_riprel32_to<&descan::g_idcmdsystem>,
	scanbytes<0x48, 0x8b, 0xd9, 0x48, 0x8b, 0xce, 0x8b, 0xfa, 0x48, 0x8b, 0x6, 0xff, 0x50, 0x8, 0x4c, 0x8b, 0xe, 0xba>
>;

#if !defined(MH_ETERNAL_V6)
//1.0 14056AD03
using locate_atomicstring_set = memscanner_t<scanbytes<0xf, 0xb6, 0x45, 0xb3, 0xf, 0x57, 0xc0, 0x0f, 0x28, 0x0D>,
	riprel32_data_equals<  0x6F, 0x12, 0x43, 0x3E, 0x6F, 0x12, 0xC3, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC8, 0x42>,
	scanbytes<0x4c, 0x89, 0x6c, 0x24, 0x48, 0x66, 0xf, 0x7f, 0x44, 0x24, 0x50, 0x4c, 0x89, 0x6c, 0x24, 0x60, 0xc7, 0x44, 0x24, 0x68, 0x6f, 0x12, 0xc3, 0x3e, 0xc7, 0x44, 0x24, 0x6c, 0x6f, 0x12, 0x43, 0x3e>>;
#else
//sprint_detached
//should work in all versions
using locate_atomicstring_set = memscanner_t<
scanbytes<0x48,0x8D, 0x15>,
riprel32_data_equals<  0x73, 0x70, 0x72, 0x69, 0x6E, 0x74, 0x5F, 0x64, 0x65, 0x74, 
  0x61, 0x63, 0x68, 0x65, 0x64, 0x00>,
scanbytes<0x48, 0x8D,0x0D>,
skip<4>,
scanbytes<0xE8>
//last four bytes = riprel to atomstrset
>;
#endif
#if !defined(MH_ETERNAL_V6)
//140345601
using locate_idstr_dctor = memscanner_t<
	scanbytes<0x44, 0x8B, 0xC6, 0x48, 0x8D, 0x0D>,
	//'NFS: data read failed, %d of %d bytes received'
	riprel32_data_equals<  0x4E, 0x46, 0x53, 0x3A, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20,
	0x72, 0x65, 0x61, 0x64, 0x20, 0x66, 0x61, 0x69, 0x6C, 0x65,
	0x64, 0x2C, 0x20, 0x25, 0x64, 0x20, 0x6F, 0x66, 0x20, 0x25,
	0x64, 0x20, 0x62, 0x79, 0x74, 0x65, 0x73, 0x20, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x00>,
	scanbytes<  0x8B, 0xD0, 0xe8>,
	skip_and_capture_rva<&descan::g_idlib_warning>,
	scanbytes<  0x49, 0x8D, 0x8D, 0xA8, 0x00, 0x00, 0x00, 0xe8>,
	skip<4>,
	scanbytes<  0x48, 0x8D, 0x4D, 0xC0, 0xe8>>;//idstr dctor comes after
#else
using locate_idstr_dctor = memscanner_t<
	scanbytes<0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0x51, 0x8,
	0x48, 0x8d, 0x5>,
	skip<4>,
	scanbytes<0x48, 0x89, 0x1, 0x48, 0x8b, 0xd9, 0x48, 0x85, 0xd2, 0x74,
	0x2d, 0x8b, 0x41, 0x14, 0xc1, 0xe8, 0x1e, 0xa8, 0x1, 0x74, 0x23,
	0x48, 0x8b, 0x0d
	>,
	skip_and_capture_rva<&descan::g_doom_memorysystem>
>;
#endif
//g_idstr_assign_charptr
//1403A0A5F
using locate_idstr_assign_charptr = memscanner_t <
	scanbytes<0x48, 0x8D, 0x15>,
	riprel32_data_equals<  0x4D, 0x69, 0x63, 0x72, 0x6F, 0x73, 0x6F, 0x66, 0x74, 0x20,
	0x57, 0x69, 0x6E, 0x64, 0x6F, 0x77, 0x73, 0x20, 0x31, 0x30,
	0x00>, //Microsoft Windows 10
	scanbytes<  0x48, 0x8B, 0xCB, 0xe8>>;//next csrel is the function



using locate_noclip_code = memscanner_t<
	scanbytes<0x48, 0x8b, 0xcf, 0xf, 0xb6, 0xd8, 0xf6, 0xd3, 0x32, 0xd8, 0x80, 0xe3, 0x4, 0x32, 0xd8, 0x48, 0x8b, 0x7>>;
//match_riprel32_to<&descan::g_idcmdsystem


#if !defined(MH_ETERNAL_V6)
using locate_body_of_getlevelmap = memscanner_t<
	scanbytes<0x48, 0x89, 0x74, 0x24, 0x20, 0x48, 0x89, 0x74, 0x24, 0x28, 0x48, 0x8b, 0x1, 0x48, 0x89, 0x74, 0x24, 0x78, 0x48, 0x89, 0xb4, 0x24, 0x80, 0x0, 0x0, 0x0, 0x40, 0x88, 0x74, 0x24, 0x48, 0x48, 0x89, 0x74, 0x24, 0x50, 0x66, 0xc7, 0x44, 0x24, 0x58, 0x0, 0x1, 0x48, 0x89, 0x74, 0x24, 0x68, 0x40, 0x88, 0x74, 0x24, 0x70, 0xff, 0x50, 0x8, 0x84, 0xc0, 0xf, 0xb6, 0x44, 0x24, 0x33, 0x40, 0xf, 0x94, 0xc7>
>;
#else
using locate_getlevelmap_offset = memscanner_t<
	scanbytes<0x48, 0x8b, 0xcb, 0x48, 0x8b, 0x3, 0xFF, 0x90>,
	skip_and_capture_4byte_value<&descan::g_vftbl_offset_getlevelmap>,
	scanbytes<0x4c, 0x8b, 0xe8, 0x48, 0x85, 0xc0, 0x75>,
	skip<1>,//jmp target
	scanbytes<0x48, 0x8D, 0x0D>,
	riprel32_data_equals<  0x43, 0x6F, 0x75, 0x6C, 0x64, 0x20, 0x6E, 0x6F, 0x74, 0x20,
	0x47, 0x65, 0x74, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x4D, 0x61,
	0x70, 0x00>
>;
#endif

using locate_idfilesystemlocal = memscanner_t<
	scanbytes<0x48, 0x8D, 0x15>,
	riprel32_data_equals<  0x2E, 0x62, 0x6E, 0x65, 0x74, 0x2D, 0x74, 0x6F, 0x6B, 0x65,
	0x6E, 0x00>,
	scanbytes<0x41, 0xb9, 0x5, 0x0, 0x0, 0x0, 0x41, 0xb0, 0x1>
>;

using locate_idlib_fatalerror_body = memscanner_t<
	scanbytes<0x4c, 0x8b, 0x44, 0x24, 0x30, 0x4c, 0x8d, 0x4c, 0x24, 0x38, 0xba, 0x8, 0x0, 0x0, 0x0, 0x8d, 0x4a, 0xf9, 0xe8>,
	match_riprel32_to<&descan::g_idlib_vprintf>
>;

using locate_idlib_error_body = memscanner_t<
	scanbytes<0x4c, 0x8b, 0x44, 0x24, 0x30, 0x4c, 0x8d, 0x4c, 0x24, 0x38, 0xba, 0x7, 0x0, 0x0, 0x0, 0x8d, 0x4a, 0xfa, 0xe8>,
	match_riprel32_to<&descan::g_idlib_vprintf>
>;
using locate_level_reload = memscanner_t<
	scanbytes<0x48, 0x89, 0x5c, 0x24, 0x20, 0x55, 0x56, 0x57, 0x41, 0x54, 0x41, 0x55, 0x41, 0x56, 0x41, 0x57, 0x48, 0x8d, 0xac, 0x24, 0xb0, 0x8e>
>;
using locate_sqrtf = memscanner_t<scanbytes<0xf3, 0xf, 0x11, 0x44, 0x24, 0x8, 0x48, 0x83, 0xec, 0x58, 0xb9, 0x0, 0x0, 0x80, 0x7f, 0xf3, 0xf, 0x11, 0x44, 0x24, 0x68, 0x8b, 0x54, 0x24, 0x68, 0x8b, 0xc2, 0x23, 0xc1, 0x3b, 0xc1>>;

using locate_init_func_rva_992170 = memscanner_t <
	scanbytes < 0x48, 0x89, 0x5c, 0x24, 0x10, 0x48, 0x89, 0x74, 0x24, 0x18, 0x57, 0xb8, 0x70, 0x38, 0x00, 0x00, 0xe8>
>;
//v1=140B7B9AF
using locate_find_next_ent_with_class = memscanner_t<
	/*scanbytes<0x49, 0x8D, 0x8E >,
	skip<4>,
	scanbytes<0xE8>,
	skip<4>,*/

	scanbytes<0x4C, 0x8D, 0x05>,
	riprel32_data_equals<  0x69, 0x64, 0x49, 0x6E, 0x66, 0x6F, 0x4C, 0x65, 0x76, 0x65, 
  0x6C, 0x46, 0x61, 0x64, 0x65, 0x49, 0x6E, 0x00>, //idInfoLevelFadeIn
	scanbytes<0x48,0x8b,0xd7,0x48,0x8b,0xce,0xe8>>;
	//scanbytes<0x33,0xd2,0x49,0x8b,0xce,0xE8>>;//then a call to it



#define		BSCANENT(name, ...)\
	const char* ___name_##name = #name;\
	using  name = blockscan_entry_definition_t<__VA_ARGS__, &___name_##name>
namespace initial_scanners {

	/*
		scanners that dont depend on locating any address before running
	*/
	//using find_alloca_probe_entry = blockscan_entry_definition_t<&descan::g_alloca_probe, scanbehavior_locate_func<locate_alloca_probe>>);;
	BSCANENT(find_alloca_probe_entry, &descan::g_alloca_probe, scanbehavior_locate_func<locate_alloca_probe>);

	BSCANENT(find_security_check_cookie_entry, &descan::g_security_check_cookie, scanbehavior_locate_func<locate_security_check_cookie>);

	BSCANENT(find_doom_operator_new_and_idfile_memory_ctor_entry, &descan::g_idfilememory_ctor, scanbehavior_locate_csrel_after<locate_doom_operator_new>);

	BSCANENT(locate_idoodle_decompress_entry, &descan::g_idoodle_decompress, scanbehavior_locate_func<locate_idoodle_decompress>);

	BSCANENT(locate_idlib_vprintf_entry, &descan::g_idlib_vprintf, scanbehavior_locate_csrel_after<locate_idlib_vprintf>);
#if !defined(MH_ETERNAL_V6)
	//hashstr is inlined everywhere in v6
	BSCANENT(locate_idlib_hashstr_entry, &descan::g_idstr_hash, scanbehavior_locate_func<locate_idstr_hash>);
#endif

	BSCANENT(locate_game_engine_init_ptr_entry, &descan::g_gamelib_initialize_ptr, scanbehavior_simple<locate_game_engine_init_ptr>);

#if !defined( MH_ETERNAL_V6)
	BSCANENT(p1_memorysystem_locator_entry, &descan::g_doom_memorysystem, scanbehavior_locate_csrel_after<p1_memorysystem_locator>);
#endif
	BSCANENT(idstr_ctor_void_locator_entry, &descan::g_idstr__idstr, scanbehavior_locate_func<locate_idstr_ctor_void>);


	BSCANENT(idgamelocal_locator_entry, &descan::g_gamelocal, scanbehavior_locate_csrel_preceding<locate_idgamelocal>);

#if !defined(MH_ETERNAL_V6)
	BSCANENT(atomicstringset_locator_entry, &descan::g_atomic_string_set, scanbehavior_locate_csrel_preceding<locate_atomicstring_set>);
#else
	BSCANENT(atomicstringset_locator_entry, &descan::g_atomic_string_set, scanbehavior_locate_csrel_after<locate_atomicstring_set>);
#endif
	BSCANENT(getentitystate_needsoffset, &descan::g_declentitydef_gettextwithinheritance, scanbehavior_simple<locate_getentitystate_in_body>);
#if !defined(MH_ETERNAL_V6)
	BSCANENT(locate_idstr_dctor_entry, &descan::g_idstr_dctor, scanbehavior_locate_csrel_after<locate_idstr_dctor>);

#else
	BSCANENT(locate_idstr_dctor_entry, &descan::g_idstr_dctor, scanbehavior_locate_func<locate_idstr_dctor>);
#endif
	BSCANENT(locate_idstr_assign_charptr_entry, &descan::g_idstr_assign_charptr, scanbehavior_locate_csrel_after<locate_idstr_assign_charptr>);
	BSCANENT(locate_noclip_code_entry, &descan::g_noclip_func, scanbehavior_locate_func<locate_noclip_code>);
	BSCANENT(locate_typeinfo_tools_entry, &descan::g_global_typeinfo_tools, scanbehavior_locate_csrel_after<scanner_locate_global_typeinfo_tools>);
#if !defined(MH_ETERNAL_V6)
	BSCANENT(locate_getlevelmap_entry, &descan::g_maplocal_getlevelmap, scanbehavior_locate_func<locate_body_of_getlevelmap>);
#else
	BSCANENT(locate_getlevelmap_entry, nullptr, scanbehavior_locate_func<locate_getlevelmap_offset>);

#endif
	//BSCANENT(locate_readfile_entry, &descan::g_idfilesystemlocal, scanbehavior_locate_csrel_preceding<locate_idfilesystemlocal>);

	//BSCANENT(locate_level_reload_entry, &descan::g_levelreload, scanbehavior_locate_func<locate_level_reload>);

#if !defined(MH_ETERNAL_V6)
	BSCANENT(idgamesystemlocal_locator_entry, &descan::g_idgamesystemlocal_find, scanbehavior_locate_csrel_preceding<locate_idgamesystemlocal>);
#else
	BSCANENT(idgamesystemlocal_locator_entry, &descan::g_idgamesystemlocal, scanbehavior_locate_csrel_after<locate_idgamesystemlocal>);
#endif

	BSCANENT(sqrtf_locator_entry, &descan::g_sqrtf, scanbehavior_locate_func<locate_sqrtf>);
	BSCANENT(sqrt_locator_entry, &descan::g_sqrt, scanbehavior_locate_func<locate_sqrt>);
	BSCANENT(resourcelist_index_locator_entry, &descan::g_resourcelist_index, scanbehavior_locate_func<locate_resourcelist_index>);
	using initial_scangroup_type = scangroup_t <
		find_alloca_probe_entry,
		find_security_check_cookie_entry,
		find_doom_operator_new_and_idfile_memory_ctor_entry,
		locate_idoodle_decompress_entry,
		locate_idlib_vprintf_entry,
#ifndef MH_ETERNAL_V6
		locate_idlib_hashstr_entry,
#endif
		locate_game_engine_init_ptr_entry,
#if !defined(MH_ETERNAL_V6)
		p1_memorysystem_locator_entry,
#endif
		idstr_ctor_void_locator_entry,
		idgamelocal_locator_entry,
		atomicstringset_locator_entry,
		getentitystate_needsoffset,
		locate_idstr_dctor_entry,
		locate_idstr_assign_charptr_entry,
#if !defined(MH_ETERNAL_V6)
		locate_noclip_code_entry,
#endif
		locate_typeinfo_tools_entry,
		locate_getlevelmap_entry,
		sqrtf_locator_entry,
		sqrt_locator_entry,
		//locate_readfile_entry,
	//	locate_level_reload_entry,
		idgamesystemlocal_locator_entry
	> ;
	static initial_scangroup_type initial_scangroup{};

}
#if !defined(MH_ETERNAL_V6)
//"Couldn't open"
using locate_idmapfilelocal_write_body = memscanner_t<
	scanbytes<0x48, 0x8b, 0xd6, 0x48, 0x8d, 0xd>,
	riprel32_data_equals<  0x43, 0x6F, 0x75, 0x6C, 0x64, 0x6E, 0x27, 0x74, 0x20, 0x6F,
	0x70, 0x65, 0x6E, 0x20, 0x25, 0x73, 0x00>,
	scanbytes<0xE8>,
	match_riprel32_to<&descan::g_idlib_warning>
>;
#else
//v1=140A757A7 
//v6=140BAB957 
using locate_idmapfilelocal_write_body = memscanner_t<
	scanbytes<0x48, 0x8B, 0x75>,
	skip<1>, //skip ptr offset "0x68", might change later, but is same between v1 and v6
	scanbytes<0x48,0x8D,0x0D>,
	riprel32_data_equals<  0x77, 0x72, 0x69, 0x74, 0x69, 0x6E, 0x67, 0x20, 0x25, 0x73, 
  0x2E, 0x2E, 0x2E, 0x0A, 0x00> //writing %s...\n
>;
#endif
namespace scanners_phase2 {
#if !defined(MH_ETERNAL_V6)
	BSCANENT(entry_phase2_locate_findclassinfo, &descan::g_idtypeinfo_findclassinfo, scanbehavior_locate_func<scanner_locate_findclassinfo>);
#else
	BSCANENT(entry_phase2_locate_findclassinfo, &descan::g_idtypeinfo_findclassinfo, scanbehavior_locate_csrel_after<scanner_locate_findclassinfo>);
#endif
	BSCANENT(entry_phase2_locate_idfilecompressed_getfile, &descan::g_idfilecompressed_getfile, scanbehavior_locate_func<locate_idfilecompressed_getfile>);

	BSCANENT(entry_phase2_locate_resourcelist_for_classname, &descan::g_resourcelist_for_classname, scanbehavior_locate_csrel_after<scanner_locate_resourcelist_for_classname>);

	BSCANENT(entry_phase2_locate_cmd_patch_area, &descan::g_command_patch_area, scanbehavior_simple<locate_cmd_patch_area>);

	BSCANENT(entry_phase2_locate_deserialize_from_json, &descan::g_deserialize_type_from_json, scanbehavior_locate_func<scanner_locate_deserialize_typetojson>);
	//BSCANENT(setentitystate_locator, &descan::g_declentitydef_setentitystate, scanbehavior_locate_func<locate_setentitystate>);
	BSCANENT(locate_idmapfilelocal_write_body_entry, &descan::g_idmapfile_write, scanbehavior_locate_func<locate_idmapfilelocal_write_body>);

	BSCANENT(locate_findenuminfo_entry, &descan::g_idtypeinfo_findenuminfo, scanbehavior_locate_csrel_after<scanner_locate_findenuminfo>);
	BSCANENT(locate_idlib_fatalerror_entry, &descan::g_idlib_fatalerror, scanbehavior_locate_func<locate_idlib_fatalerror_body>);


	BSCANENT(locate_idlib_error_entry, &descan::g_idlib_error, scanbehavior_locate_func<locate_idlib_error_body>);
	BSCANENT(find_next_ent_with_class_locator_entry, &descan::g_find_next_entity_with_class, scanbehavior_locate_csrel_after<locate_find_next_ent_with_class>);
	
	using secondary_scangroup_type = scangroup_t<
		entry_phase2_locate_findclassinfo,
		entry_phase2_locate_idfilecompressed_getfile,
		entry_phase2_locate_resourcelist_for_classname,
		entry_phase2_locate_cmd_patch_area,
	//	entry_phase2_locate_deserialize_from_json,
		//setentitystate_locator,
		locate_idmapfilelocal_write_body_entry,
		locate_findenuminfo_entry,
		locate_idlib_fatalerror_entry,
		locate_idlib_error_entry,
		find_next_ent_with_class_locator_entry
	>;


	static secondary_scangroup_type secondary_scangroup_pass{};
}
#include <cstdio>

volatile bool wait_for_debugger = true;
void descan::locate_critical_features() {

#ifdef PRINT_SCAN_TIME_TAKEN
	uint64_t tickcount = GetTickCount64();
#endif
	FILE* DebugFileStream = nullptr;
	if (fopen_s(&DebugFileStream, "wait_for_debugger.txt", "rb") == 0) {
		fclose(DebugFileStream);
		while (wait_for_debugger);
	}

	initial_scanners::initial_scangroup.execute_on_image();
	if(descan::g_resourcelist_index) {
		descan::g_resourcelist_index = hunt_assumed_func_start_back(descan::g_resourcelist_index);
	}
	descan::g_declentitydef_gettextwithinheritance = hunt_assumed_func_start_back(descan::g_declentitydef_gettextwithinheritance);
#if !defined(MH_ETERNAL_V6)
	descan::g_noclip_func = hunt_assumed_func_start_back(descan::g_noclip_func);

	descan::g_maplocal_getlevelmap = hunt_assumed_func_start_back(descan::g_maplocal_getlevelmap);
#endif
	//fallback
	if (!g_doom_memorysystem)
		g_doom_memorysystem = locate_csrelative_address_after<locate_memorysystem>();

	g_idcvarsystem = ((void**)g_doom_memorysystem) + 1;
	g_idcmdsystem = ((void**)g_doom_memorysystem) + 2;
	descan::g_idfilesystemlocal = ((void**)g_doom_memorysystem) + 3;
	scanners_phase2::secondary_scangroup_pass.execute_on_image();
	descan::g_idtypeinfo_findclassinfo = hunt_assumed_func_start_back(descan::g_idtypeinfo_findclassinfo);
	descan::g_idfilecompressed_getfile = hunt_assumed_func_start_back(descan::g_idfilecompressed_getfile);
	g__ZN5idStr4IcmpEPKcS1_ =
		scan_guessed_function_boundaries<scanbehavior_locate_csrel_after<scanner_locate_listofResourceLists_and_idstricmp>>(descan::g_resourcelist_for_classname);

	descan::g_idlib_fatalerror = hunt_assumed_func_start_back(descan::g_idlib_fatalerror);
	descan::g_idlib_error = hunt_assumed_func_start_back(descan::g_idlib_error);
	g_idmapfile_write = hunt_assumed_func_start_back(descan::g_idmapfile_write);
#ifdef PRINT_SCAN_TIME_TAKEN

	unsigned tickstaken = (unsigned)(GetTickCount64() - tickcount);

	char buffer[128];
	sprintf_s(buffer, "Scanning binary took %d ms", tickstaken);

	MessageBoxA(nullptr, buffer, "Scan time", MB_OK);

#endif

	//g_idfilecompressed_getfile = locate_csrelative_address_preceding<locate_idfilecompressed_getfile>();

	//__debugbreak();
}

